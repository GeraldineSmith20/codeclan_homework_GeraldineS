library(tidyverse)
library(lubridate)
library(tsibble)
library(tsibbledata)
library(fable)
nyc_bikes90
nyc_bikes()
nyc_bikes
bike_data <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time),
date = ymd(start_time))
bike_data <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time)
bike_data <- nyc_bikes %>%
bike_data <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time)
library(tidyverse)
library(tidyverse)
library(lubridate)
library(tsibble)
library(tsibbledata)
library(fable)
bike_data <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time),
date = as_date(start_time))
View(bike_data)
bike_data <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE),
date = as_date(start_time))
View(bike_data)
bike_data %>%
select(month) %>%
index_by(month) %>%
summarise(no_bikes = n())
bike_data %>%
select(month) %>%
index_by(month) %>%
summarise(no_bikes = n())
bike_data %>%
ggplot() +
geom_line(aes(x = month, y = no_bikes))
bike_count <- bike_data %>%
select(month) %>%
index_by(month) %>%
summarise(no_bikes = n())
bike_count %>%
ggplot() +
geom_line(aes(x = month, y = no_bikes))
bike_count <- bike_data %>%
select(month) %>%
index_by(month) %>%
summarise(no_bikes = n())
bike_count %>%
ggplot() +
geom_line(aes(x = month, y = no_bikes), group = 1)
bike_count <- bike_data %>%
select(month) %>%
index_by(month) %>%
summarise(no_bikes = n())
bike_count %>%
ggplot(aes(x = month, y = no_bikes)) +
geom_point() +
geom_line(group = 1)
bike_count_date <- bike_data %>%
select(date) %>%
index_by(date) %>%
summarise(no_bikes = n())
bike_count_date %>%
ggplot(aes(x = month, y = no_bikes)) +
geom_point() +
geom_line(group = 1)
bike_count_date <- bike_data %>%
select(date) %>%
index_by(date) %>%
summarise(no_bikes = n())
bike_count_date %>%
ggplot(aes(x = date, y = no_bikes)) +
geom_point() +
geom_line(group = 1)
library(urca)
fit <- bike_count_date %>%
model(
snaive = SNAIVE(no_bikes),
mean_model = MEAN(no_bikes),
arima = ARIMA(no_bikes)
)
fit
View(bike_count_date)
padded_bike_count_data <- bike_count_data %>%
fill_gaps(.full = NA)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(.full = NA)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(no_bikes = median(no_bikes))
library(urca)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(no_bikes = median(no_bikes))
fit <- padded_bike_count_date %>%
model(
snaive = SNAIVE(no_bikes),
mean_model = MEAN(no_bikes),
arima = ARIMA(no_bikes)
)
fit
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1 %>%
autoplot(no_bikes) +
ggtitle("Forecasts for NYC Bikes") +
xlab("Month") +
guides(colour = guide_legend(title = "Forecast"))
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1 %>%
autoplot(padded_bike_count_date) +
ggtitle("Forecasts for NYC Bikes") +
xlab("Month") +
guides(colour = guide_legend(title = "Forecast"))
View(padded_bike_count_date)
library(urca)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(no_bikes = mean(no_bikes))
fit <- padded_bike_count_date %>%
model(
snaive = SNAIVE(no_bikes),
mean_model = MEAN(no_bikes),
arima = ARIMA(no_bikes)
)
fit
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1 %>%
autoplot(padded_bike_count_date) +
ggtitle("Forecasts for NYC Bikes") +
xlab("Month") +
guides(colour = guide_legend(title = "Forecast"))
library(urca)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(no_bikes = as.integer(median(no_bikes))
fit <- padded_bike_count_date %>%
library(urca)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(no_bikes = as.integer(median(no_bikes)))
fit <- padded_bike_count_date %>%
model(
snaive = SNAIVE(no_bikes),
mean_model = MEAN(no_bikes),
arima = ARIMA(no_bikes)
)
fit
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1 %>%
autoplot(padded_bike_count_date) +
ggtitle("Forecasts for NYC Bikes") +
xlab("Month") +
guides(colour = guide_legend(title = "Forecast"))
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1 %>%
autoplot(padded_bike_count_date) +
ggtitle("Forecast for NYC Bikes") +
xlab("Date") +
guides(colour = guide_legend(title = "Forecast"))
training <- padded_bike_count_date %>%
filter_index("2018-01-01" ~ "2018-06-30")
fit_training <- training %>%
model(
mean_model = MEAN(padded_bike_count_date),
arima = ARMA(padded_bike_count_date),
snaive = SNAIVE(padded_bike_count_date)
)
training <- padded_bike_count_date %>%
filter_index("2018-01-01" ~ "2018-06-30")
fit_training <- training %>%
model(
mean_model = MEAN(padded_bike_count_date),
arima = ARIMA(padded_bike_count_date),
snaive = SNAIVE(padded_bike_count_date)
)
training <- padded_bike_count_date %>%
filter_index("2018-01-01" ~ "2018-06-30")
fit_training <- training %>%
model(
mean_model = MEAN(no_bikes),
arima = ARIMA(no_bikes),
snaive = SNAIVE(no_bikes)
)
forecast_test <- fit_training %>%
fabletools::forecast(h = 180)
forecast_test %>%
autoplot(training, level = NULL) +
autolayer(filter_index(padded_bike_count_date, "2018-07-01" ~ .), colour = "black") +
ggtitle("Forecasts for NYC Bike Use") +
xlab("Date") +
ylab("No. of Bikes") +
guides(colour = guide_legend(title = "Forecast"))
accuracy_model <- fabletools::accuracy(forecast_test, padded_bike_count_date)
accuracy_model
library(urca)
padded_bike_count_date <- bike_count_date %>%
fill_gaps(no_bikes = as.integer(median(no_bikes)))
fit <- padded_bike_count_date %>%
model(
snaive = SNAIVE(no_bikes),
mean_model = MEAN(no_bikes),
naive = NAIVE(no_bikes)
)
fit
forecast_1 <- fit %>%
fabletools::forecast(h = 120)
forecast_1 %>%
autoplot(padded_bike_count_date) +
ggtitle("Forecast for NYC Bikes") +
xlab("Date") +
guides(colour = guide_legend(title = "Forecast"))
training <- padded_bike_count_date %>%
filter_index("2018-01-01" ~ "2018-06-30")
fit_training <- training %>%
model(
mean_model = MEAN(no_bikes),
arima = ARIMA(no_bikes),
snaive = SNAIVE(no_bikes)
)
training <- padded_bike_count_date %>%
filter_index("2018-01-01" ~ "2018-06-30")
fit_training <- training %>%
model(
mean_model = MEAN(no_bikes),
naive = NAIVE(no_bikes),
snaive = SNAIVE(no_bikes)
)
forecast_test <- fit_training %>%
fabletools::forecast(h = 180)
forecast_test %>%
autoplot(training, level = NULL) +
autolayer(filter_index(padded_bike_count_date, "2018-07-01" ~ .), colour = "black") +
ggtitle("Forecasts for NYC Bike Use") +
xlab("Date") +
ylab("No. of Bikes") +
guides(colour = guide_legend(title = "Forecast"))
accuracy_model <- fabletools::accuracy(forecast_test, padded_bike_count_date)
accuracy_model
View(bike_data)
bike_data %>%
ggplot(aes(x = start_long, y = start_lat)) +
geom_point()
bike_data %>%
ggplot(aes(x = start_long, y = start_lat)) +
geom_point() +
facet_wrap(~ bike_id)
bike_data %>%
ggplot(aes(x = start_long, y = start_lat)) +
geom_point() +
facet_wrap(~ bike_id, ncol = 3)
bike_data %>%
ggplot(aes(x = start_long, y = start_lat)) +
geom_point() +
facet_wrap(~ bike_id, ncol = 5)
bike_data %>%
ggplot(aes(x = start_long, y = start_lat)) +
geom_point(colour = month) +
facet_wrap(~ bike_id, ncol = 5)
bike_data %>%
ggplot(aes(x = start_long, y = start_lat, colour = month)) +
geom_point() +
facet_wrap(~ bike_id, ncol = 5)
bike_data %>%
ggplot(aes(x = end_long, y = end_lat, colour = month)) +
geom_point() +
facet_wrap(~ bike_id, ncol = 5)
leaflet(bike_data) %>%
addTiles() %>%
addCircleMarkers(
lng = ~start_long,
lat = ~start_lat,
radius = ~amount,
weight = 1)
library(leaflet)
library(leaflet)
leaflet(bike_data) %>%
addTiles() %>%
addCircleMarkers(
lng = ~start_long,
lat = ~start_lat,
radius = ~amount,
weight = 1)
library(leaflet)
leaflet(bike_data) %>%
addTiles() %>%
addCircleMarkers(
lng = ~start_long,
lat = ~start_lat,
radius = ~ 10,
weight = 1)
library(leaflet)
leaflet(bike_data) %>%
addTiles() %>%
addCircleMarkers(
lng = ~start_long,
lat = ~start_lat,
radius = ~ 1,
weight = 1)
library(leaflet)
leaflet(bike_data) %>%
addTiles() %>%
addCircleMarkers(
lng = ~start_long,
lat = ~start_lat,
radius = ~ 5,
weight = 1)
nyc_bikes_spatial
head(nyc_bikes_spatial)
