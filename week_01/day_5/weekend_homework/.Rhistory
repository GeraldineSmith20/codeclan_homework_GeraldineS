library(tidyverse)
book_data <- read_csv("data/books.csv")
problems()
prblems(...)
problems(book_data)
problems(book_data)
View(book_data)
View(book_data)
book_data <- read_csv("data/books.csv")
dim(book_data)
book_data <- read_csv("data/books.csv")
head(book_data)
#Count of missing values per column
book_data %>%
group_by(everything) %>%
summarise(na_count = is.na(everything))
#Count of missing values per column
book_data %>%
group_by(everything()) %>%
summarise(na_count = is.na(everything()))
#Count of missing values per column
book_data %>%
summarise(count = sum(is.na(title)))
#Count of missing values per column
book_data %>%
summarise(across(count = sum(is.na())))
#Count of missing values per column
book_data %>%
summarise(across(is.na))
#Count of missing values per column
book_data %>%
summarise(across(where(is.na)))
#Count of missing values per column
book_data %>%
is.na(everything)
#Count of missing values per column
book_data %>%
is.na(everything())
#Count of missing values per column
book_data %>%
select(is.na(everything()))
#Count of missing values per column
book_data %>%
count(is.na())
#Count of missing values per column
book_data %>%
count(is.na(everything))
#Count of missing values per column
book_data %>%
count(is.na(everything)) %>%
group_by(everything)
#Count of missing values per column
book_data %>%
count(is.na(everything)) %>%
#Count of missing values per column
book_data %>%
count(is.na(everything))
#Count of missing values per column
book_data %>%
count(is.na(bookID, title, authors))
#Count of missing values per column
book_data %>%
count(is.na(bookID))
#Count of missing values per column
book_data %>%
count(is.na(title))
#Count of missing values per column
book_data %>%
count(na)
#Count of missing values per column
book_data %>%
count("na")
#Count of missing values per column
book_data %>%
mutate(has_title = is.na(title))
#Count of missing values per column
book_data %>%
mutate(has_title = is.na(ratings_count))
#Count of missing values per column
book_data %>%
mutate(has_title = !is.na(ratings_count))
#Count of missing values per column
book_data %>%
summarise_all(sum(is.na(.)))
#Count of missing values per column
book_data %>%
summarise_all(sum(is.na(.))))
#Count of missing values per column
book_data %>%
summarise_all(sum(is.na(book_data)))
#Count of missing values per column
book_data %>%
summarise_all(sum(is.na(.)))
#Count of missing values per column
book_data %>%
summarise_all(book_data, sum(is.na(.)))
#Count of missing values per column
book_data %>%
sum(is.na(.))
#Count of missing values per column
book_data %>%
sapply(sum(length(which(is.na))))
#Count of missing values per column
book_data %>%
sum(is.na())
#Count of missing values per column
book_data %>%
sum(is.na(.))
#Count of missing values per column
book_data %>%
filter(!is.na(title))
#Count of missing values per column
book_data %>%
filter(is.na(title))
#Count of missing values per column
book_data %>%
filter(is.na(authors))
#Count of missing values per column
book_data %>%
select(everything()) %>%
summarise_all(funs(sum(is.na(.))))
books_daya %>%
summarise(count = sum(is.na(books_info)))
books_data %>%
summarise(count = sum(is.na(books_info)))
book_data %>%
summarise(count = sum(is.na(book_data)))
book_data %>%
summarise(total_na = sum(is.na(book_data)))
View(book_data)
book_data %>%
filter(is.na(average_rating))
#Replace
cleaned_book_data <- book_data %>%
filter(!is.na(average_rating))
#Replace na values in average rating with median rating
cleaned_book_data <- book_data %>%
filter(!is.na(average_rating))
#Replace na values in average rating with median rating
cleaned_book_data <- book_data %>%
filter(!is.na(average_rating))
cleaned_book_data
#Replace na values in average rating with median rating
cleaned_book_data <- book_data %>%
filter(is.na(average_rating))
cleaned_book_data
#Output NA's to discuss in class on Monday!
book_data %>%
filter(!is.na(average_rating))
#Output NA's to discuss in class on Monday!
book_data %>%
filter(is.na(average_rating))
#Recoding NA's in average rating with median of average rating
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
#Recoding NA's in average rating with median of average rating
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE))) %>%
filter(is.na(average_rating))
#Recoding NA's in average rating with median of average rating
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE))) %>%
filter(is.na(average_rating))
imputed_median_book_data
#Recoding NA's in average rating with median of average rating
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE))) %>%
#Recoding NA's in average rating with median of average rating
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n)
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = sum(n))
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = count(title))
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n())
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(no_of_books(desc)
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(no_of_books(desc))
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n())
#Imputing NA's in average rating with median of average rating
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count)
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(no_of_books(desc))
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(no_of_books(desc))
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n())
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange((desc))
#2 Author with the highest number(count) of books published
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(desc(no_of_books))
View(imputed_median_book_data)
#2 Review count of books in each language
book_data %>%
group_by(language_code) %>%
summarise(count = n())
#2 Review count of books in each language
book_data %>%
group_by(language_code) %>%
summarise(count = n()) %>%
filter(starts_with("en"))
#2 Review count of books in each language
book_data %>%
group_by(language_code) %>%
summarise(count = n()) %>%
filter(str_detect(language_code, "en"))
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng")
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count)
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng") %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count)
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng") %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count, language_code)
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng")
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng")) %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count, language_code)
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng")) %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count, language_code) %>%
filter(language_code = "eng")
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce (average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng")) %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count, language_code) %>%
filter(language_code == "eng")
imputed_median_book_data
#2 Count of books in each language
book_data %>%
group_by(language_code) %>%
summarise(count = n()) %>%
filter(str_detect(language_code, "en"))
sum(count)
#2 Count of books in each language
book_data %>%
group_by(language_code) %>%
summarise(count = n()) %>%
filter(str_detect(language_code, "en"))
3+159+1040+6815+3
#3 Imputing NA's in average rating with median of average rating and replacing all en with english and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(language_code, "en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng", "enm" = "eng")) %>%
select(title, authors, average_rating, publication_date, ratings_count, text_reviews_count, language_code) %>%
filter(language_code == "eng")
imputed_median_book_data
#3 Imputing NA's in average rating with median of average rating and replacing all en with eng and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating = coalesce(
average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code = recode(
language_code, "en-CA" = "eng",
"en-GB" = "eng",
"en-US" = "eng",
"enm" = "eng")) %>%
select(title,
authors,
average_rating,
publication_date,
ratings_count,
text_reviews_count,
language_code) %>%
filter(language_code == "eng")
imputed_median_book_data
#4 Author with the highest number of books published with average rating
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(desc(no_of_books))
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating))
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating)) %>%
slice_max(., n = 10)
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating)) %>%
slice_max( n = 10)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating))
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating)) %>%
slice_max(average_overall_rating, n = 10)
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating)) %>%
summarise(number_of_books = n())
slice_max(average_overall_rating, n = 10)
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating), number_of_books = n()) %>%
slice_max(average_overall_rating, n = 10)
# 5 Top 10 authors by average rating (published in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating), no_of_ratings = sum(ratings_count)) %>%
slice_max(average_overall_rating, n = 10)
# 5 Top 10 authors by average rating (published in English) - filtered data to ensure at least 10 ratings where available
imputed_median_book_data %>%
filter(ratings_count >= 10) %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating), no_of_ratings = sum(ratings_count)) %>%
slice_max(average_overall_rating, n = 10)
range(ratings_count)
range(imputed_median_book_data ,ratings_count)
range(imputed_median_book_data ,ratings_count)
range(imputed_median_book_data , ratings_count)
range(imputed_median_book_data , ratings_count)
range(imputed_median_book_data$ratings_count)
range(imputed_median_book_data$ratings_count)
median(imputed_median_book_data$ratings_count)
# 5 Top 10 authors by average rating (published in English) - filtered data to ensure at least 10 ratings where available
range(imputed_median_book_data$ratings_count)
median(imputed_median_book_data$ratings_count)
imputed_median_book_data %>%
filter(ratings_count >= 1000) %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating), no_of_ratings = sum(ratings_count)) %>%
slice_max(average_overall_rating, n = 10)
styler:::set_style_transformers()
styler:::set_style_transformers()
styler:::set_style_transformers()
styler:::set_style_transformers()
styler:::set_style_transformers()
library(tidyverse)
book_data <- read_csv("data/books.csv")
head(book_data)
problems(book_data)
#1 - Count of missing values per column
book_data %>%
select(everything()) %>%
summarise_all(funs(sum(is.na(.))))
# Check of #1
book_data %>%
summarise(total_na = sum(is.na(book_data)))
#Output NA's to discuss in class on Monday!
book_data %>%
filter(is.na(average_rating))
#2 Count of books in each language
book_data %>%
group_by(language_code) %>%
summarise(count = n()) %>%
filter(str_detect(language_code, "en"))
#3 Imputing NA's in average rating with median of average rating and replacing all en with eng and filtering on this
imputed_median_book_data <- book_data %>%
mutate(average_rating =
coalesce(
average_rating, median(average_rating, na.rm = TRUE))) %>%
mutate(language_code =
recode(
language_code, "en-CA" = "eng",
"en-GB" = "eng",
"en-US" = "eng",
"enm" = "eng")) %>%
select(title,
authors,
average_rating,
publication_date,
ratings_count,
text_reviews_count,
language_code) %>%
filter(language_code == "eng")
imputed_median_book_data
#4 Authors sorted by highest number of books published (in English)
imputed_median_book_data %>%
group_by(authors) %>%
summarise(no_of_books = n()) %>%
arrange(desc(no_of_books))
# 5 Top 10 authors by average rating (published in English) - filtered data to ensure at least 1000 ratings where available given range of ratings_count
range(imputed_median_book_data$ratings_count)
median(imputed_median_book_data$ratings_count)
imputed_median_book_data %>%
filter(ratings_count >= 1000) %>%
group_by(authors) %>%
summarise(average_overall_rating = mean(average_rating), no_of_ratings = sum(ratings_count)) %>%
slice_max(average_overall_rating, n = 10)
?describe
??describe
book_data %>%
summarise(across(.fns = ~ sum(is.na(.x))))
