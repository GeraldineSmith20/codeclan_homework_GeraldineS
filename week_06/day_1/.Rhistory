library(gtools)
library(tidyverse)
titanic_data <- read_csv("data/titanic.csv")
View(titanic_data)
titanic_data %>%
distinct(class)
library(gtools)
library(prob)
library(tidyverse)
titanic_data <- read_csv("data/titanic.csv")
titanic_data %>%
distinct(class)
titanic_data <- titanic_data %>%
mutate(is_passenger = str_detect(class, "[0-9][a-z]{2}"))
titanic_data <- titanic_data %>%
mutate(is_passenger = str_detect(class, "[0-9][a-z]{2}")) %>%
select(survived, is_passenger)
table <- titanic_data %>%
tabyl(survived, is_passenger)
library(gtools)
library(prob)
library(tidyverse)
library(janitor)
titanic_data <- read_csv("data/titanic.csv")
titanic_data %>%
distinct(class)
titanic_data <- titanic_data %>%
mutate(is_passenger = str_detect(class, "[0-9][a-z]{2}")) %>%
select(survived, is_passenger)
table <- titanic_data %>%
tabyl(survived, is_passenger)
table <- table %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all") %>%
adorn_title()
table
prob_survived_crew <- titanic_data %>%
filter(survived == "yes", passenger == FALSE) %>%
summarise(prob = n() / nrow(titanic_data))
prob_survived_crew <- titanic_data %>%
filter(survived == "yes", is_passenger == FALSE) %>%
summarise(prob = n() / nrow(titanic_data))
library(tidyverse)
library(gtools)
library(prob)
library(janitor)
titanic_data <- read_csv("data/titanic.csv")
titanic_data %>%
distinct(class)
titanic_data <- titanic_data %>%
mutate(is_passenger = str_detect(class, "[0-9][a-z]{2}")) %>%
select(survived, is_passenger)
table <- titanic_data %>%
tabyl(survived, is_passenger)
table <- table %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all") %>%
adorn_title()
table
prob_survived_crew <- titanic_data %>%
filter(survived == "yes", is_passenger == FALSE) %>%
summarise(prob = n() / nrow(titanic_data))
prob_survived_crew <- titanic_data %>%
dplyr::filter(survived == "yes", is_passenger == FALSE) %>%
summarise(prob = n() / nrow(titanic_data))
prob_survived_crew
prob_survived_passenger <- titanic_data %>%
dplyr::filter(survived == "yes", is_passenger == TRUE) %>%
summarise(prob = n() / nrow(titanic_data))
prob_survived_passenger
roll_4_dice <- rolldie(4)
roll_4_dice <- rolldie(4)
roll_4_dice
roll_4_dice <- rolldie(4) %>%
mutate(sum = X1 + X2 + X3 + X4)
View(roll_4_dice)
roll_4_dice <- rolldie(4) %>%
mutate(sum = X1 + X2 + X3 + X4)
no_outcomes <- roll_4_dice %>%
dplyr::filter(sum >= 5 & sum <= 7)
roll_4_dice <- rolldie(4) %>%
mutate(sum = X1 + X2 + X3 + X4)
no_outcomes <- roll_4_dice %>%
dplyr::filter(sum >= 5 & sum <= 7) %>%
nrow()
roll_4_dice <- rolldie(4) %>%
mutate(sum = X1 + X2 + X3 + X4)
no_outcomes <- roll_4_dice %>%
dplyr::filter(sum >= 5 & sum <= 7) %>%
nrow()
no_outcomes
prob_tot_5_6_7 <- no_outcomes / nrow(roll_4_dice)
prob_tot_5_6_7
View(roll_4_dice)
View(roll_4_dice)
folk <- c("Shortest Jim", "Slightly taller Bob", "Average height Claire", "Taller than average Joe", "Tallest Sally")
height_order <- as_tibble(permutations(n = 5, r = 5, v = folk, repeats.allowed = FALSE))
folk <- c("Shortest Jim", "Slightly taller Bob", "Average height Claire", "Taller than average Joe", "Tallest Sally")
height_order <- as_tibble(permutations(n = 5, r = 5, v = folk, repeats.allowed = FALSE))
height_order
folk <- c("Shortest Jim", "Slightly taller Bob", "Average height Claire", "Taller than average Joe", "Tallest Sally")
height_order <- as_tibble(permutations(n = 5, r = 5, v = folk, repeats.allowed = FALSE))
height_order <- height_order %>%
rename(chair_1 = V1,
chair_2 = V2,
chair_3 = V3,
chair_4 = V4,
chair_5 = V5)
folk <- c("Shortest Jim", "Slightly taller Bob", "Average height Claire", "Taller than average Joe", "Tallest Sally")
height_order <- as_tibble(permutations(n = 5, r = 5, v = folk, repeats.allowed = FALSE))
height_order <- height_order %>%
rename(chair_1 = V1,
chair_2 = V2,
chair_3 = V3,
chair_4 = V4,
chair_5 = V5) %>%
nrow()
folk <- c("Shortest Jim", "Slightly taller Bob", "Average height Claire", "Taller than average Joe", "Tallest Sally")
height_order <- as_tibble(permutations(n = 5, r = 5, v = folk, repeats.allowed = FALSE))
height_order <- height_order %>%
rename(chair_1 = V1,
chair_2 = V2,
chair_3 = V3,
chair_4 = V4,
chair_5 = V5) %>%
nrow(height_order)
folk <- c("Shortest Jim", "Slightly taller Bob", "Average height Claire", "Taller than average Joe", "Tallest Sally")
height_order <- as_tibble(permutations(n = 5, r = 5, v = folk, repeats.allowed = FALSE))
height_order <- height_order %>%
rename(chair_1 = V1,
chair_2 = V2,
chair_3 = V3,
chair_4 = V4,
chair_5 = V5)
nrow(height_order)
prob <- height_order %>%
dplyr:filter(chair_1 = "Tallest Sally",
chair_2 = "Taller than average Joe",
chair_3 = "Average height Claire",
chair_4 = "Slightly taller Bob",
chair_5 = "Shortest Jim")
prob <- height_order %>%
dplyr::filter(chair_1 = "Tallest Sally",
chair_2 = "Taller than average Joe",
chair_3 = "Average height Claire",
chair_4 = "Slightly taller Bob",
chair_5 = "Shortest Jim")
prob <- height_order %>%
dplyr::filter(chair_1 == "Tallest Sally",
chair_2 == "Taller than average Joe",
chair_3 == "Average height Claire",
chair_4 =="Slightly taller Bob",
chair_5 == "Shortest Jim")
prob <- height_order %>%
dplyr::filter(chair_1 == "Tallest Sally",
chair_2 == "Taller than average Joe",
chair_3 == "Average height Claire",
chair_4 =="Slightly taller Bob",
chair_5 == "Shortest Jim")
prob
height_order %>%
dplyr::filter(chair_1 == "Tallest Sally",
chair_2 == "Taller than average Joe",
chair_3 == "Average height Claire",
chair_4 =="Slightly taller Bob",
chair_5 == "Shortest Jim")
height_order %>%
dplyr::filter(chair_1 == "Tallest Sally",
chair_2 == "Taller than average Joe",
chair_3 == "Average height Claire",
chair_4 =="Slightly taller Bob",
chair_5 == "Shortest Jim") %>%
summarise(prob = n() / nrow(height_order))
6*5*4*3*2*1
1/720
dice <- c(1:6)
combo <- combinations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
dice <- c(1:6)
combo <- combinations(n = 6, r = 6, v = dice, repeats.allowed = FALSE)
nrow(combo)
dice <- c(1:6)
combo <- combinations(n = 6, r = 6, v = dice, repeats.allowed = TRUE)
nrow(combo)
View(roll_4_dice)
dice_6 <- rolldie(6)
dice_6
dice_6 %>%
dplyr::filter(X1 == 1,
X2 == 2,
X3 == 3,
X4 == 4,
X5 == 5,
X6 == 6)
dice_6 <- rolldie(6)
dice_6
1/46656
dice_6 <- rolldie(6)
dice_6
dice_6 %>%
dplyr::filter(X1 == 1,
X2 == 2,
X3 == 3,
X4 == 4,
X5 == 5,
X6 == 6) %>%
summarise(n() / nrow(dice_6))
dice_6 <- rolldie(6)
dice_6
dice_6 %>%
dplyr::filter(X1 == 1,
X2 == 2,
X3 == 3,
X4 == 4,
X5 == 5,
X6 == 6) %>%
summarise(n() / nrow(dice_6))
dice_6 <- rolldie(6)
dice_6
dice_6 %>%
dplyr::filter(X1 == 6,
X2 == 5,
X3 == 4,
X4 == 3,
X5 == 2,
X6 == 1) %>%
summarise(n() / nrow(dice_6))
dice_6 %>%
dplyr::filter(isin(X1, c(6, 5, 4, 3, 2, 1)),
isin(X2, c(5, 4, 3, 2, 1)),
isin(X3, c(4, 3, 2, 1)),
isin(X4, c(3, 2, 1)),
isin(X5, c(2, 1)),
isin(X6, c(1))) %>%
summarise(n() / nrow(dice_6))
(1/6)^6
6!
dice_combos <- combinations(n = 6, r = 6, v = c(1:6), repeats.allowed = FALSE)
dice_combos <- combinations(n = 6, r = 6, v = c(1:6), repeats.allowed = FALSE)
dice_combos
die_6 <- rolldie(6)
dice_combos <- combinations(n = 6, r = 6, v = die_6, repeats.allowed = FALSE)
die_6 <- rolldie(6) %>%
pull()
dice_combos <- combinations(n = 6, r = 6, v = die_6, repeats.allowed = FALSE)
dice_combos
die_6 <- rolldie(6) %>%
pull()
dice_combos <- combinations(n = 6, r = 6, v = die_6, repeats.allowed = FALSE)
dice_combos
die_6 <- rolldie(6)
dice_combos <- combinations(n = 6, r = 6, v = die_6, repeats.allowed = FALSE)
die_6 <- rolldie(6)
die_6 <- rolldie(6)
die_6
choose(6, 6)
cards <- cards(jokers = FALSE)
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1))) %>%
pull(card)
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1))) %>%
pull(card)
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1)))
cards
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1))) %>%
mutate(black_card = str_detect(card, "C") | str_detect(card, "S"))
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1))) %>%
mutate(black_card = str_detect(card, "C") | str_detect(card, "S"))
cards
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1)))
cards_black <- cards %>%
mutate(black_card = str_detect(card, "C") | str_detect(card, "S"))
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1)))
cards_black <- cards %>%
mutate(black_card = str_detect(card, "C") | str_detect(card, "S")) %>%
filter(black_card == TRUE) %>%
summarise(prob = n() / nrow(cards))
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1)))
cards_black <- cards %>%
mutate(black_card = str_detect(card, "C") | str_detect(card, "S")) %>%
dplyr::filter(black_card == TRUE) %>%
summarise(prob = n() / nrow(cards))
cards <- cards(jokers = FALSE) %>%
mutate(card = str_c(rank, str_sub(suit, start = 1, end = 1)))
cards_black_prob <- cards %>%
mutate(black_card = str_detect(card, "C") | str_detect(card, "S")) %>%
dplyr::filter(black_card == TRUE) %>%
summarise(prob = n() / nrow(cards))
cards_black_prob
View(dice_6)
View(dice_6)
library(tidyverse)
library(gtools)
library(prob)
library(janitor)
titanic_data <- read_csv("data/titanic.csv")
titanic_data %>%
distinct(class)
titanic_data <- titanic_data %>%
mutate(is_passenger = str_detect(class, "[0-9][a-z]{2}")) %>%
select(survived, is_passenger)
View(titanic_data)
titanic_data %>%
filter(survived == "yes") %>%
nrow()
titanic_data %>%
dplyr::filter(survived == "yes") %>%
nrow()
titanic_data %>%
dplyr::filter(survived != "yes") %>%
nrow()
titanic_data %>%
dplyr::filter(is_passenger != "yes") %>%
nrow()
titanic_data %>%
dplyr::filter(is_passenger == "yes") %>%
nrow()
titanic_data %>%
dplyr::filter(is_passenger == "yes") %>%
nrow()
titanic_data %>%
dplyr::filter(is_passenger == "TRUE") %>%
nrow()
titanic_data %>%
dplyr::filter(is_passenger == "FALSE") %>%
nrow()
titanic_data %>%
dplyr::filter(is_passenger == "FALSE", survived == "yes") %>%
nrow()
n_row_survived <- titanic_data %>%
dplyr::filter(survived == "yes") %>%
nrow()
n_row_survived <- titanic_data %>%
dplyr::filter(survived == "yes") %>%
nrow()
n_row_survived
prob_survived_crew <- titanic_data %>%
dplyr::filter(survived == "yes", is_passenger == FALSE) %>%
summarise(prob = n() / n_row_survived)
prob_survived_crew
prob_survived_passenger <- titanic_data %>%
dplyr::filter(survived == "yes", is_passenger == TRUE) %>%
summarise(prob = n() / n_row_survived)
prob_survived_passenger
prob_survived_crew <- titanic_data %>%
dplyr::filter(is_passenger == FALSE) %>%
summarise(prob = sum(survived == "yes") / n())
prob_survived_crew
prob_survived_passenger <- titanic_data %>%
dplyr::filter(is_passenger == TRUE) %>%
summarise(prob = sum(survived == "yes") / n())
prob_survived_passenger
